CXXFLAGS = -g -Wall -fPIC
INCFLAGS =

# detect proper flag for c++11 support by gcc
CXXVER := $(shell $(CXX) -dumpversion)
ifeq ($(shell expr match ${CXXVER} "4\.[0-9][0-9]"),4) # >= 4.10
  CXXFLAGS += -std=c++11
else ifeq ($(shell expr match ${CXXVER} "4\.[7-9]"),3) # >= 4.7
  CXXFLAGS += -std=c++11
else ifeq ($(shell expr match ${CXXVER} "4\.6"),3) # = 4.6
  CXXFLAGS += -std=c++0x
else ifeq ($(shell expr match $(CXX) 'clang'),5)
  CXXFLAGS += -std=c++11
else # not supported
  $(error Compiler too old)
endif

ifeq ($(USE_STATIC),yes)
  LIBDIR := /usr/lib
  LDLIBS  = $(LIBDIR)/libboost_system.a
  LDLIBS += $(LIBDIR)/libboost_date_time.a
  LDLIBS += $(LIBDIR)/libboost_filesystem.a
  LDLIBS += $(LIBDIR)/libboost_regex.a
  LDLIBS += $(LIBDIR)/libboost_program_options.a
  LDLIBS += $(LIBDIR)/libcryptopp.a
  LDLIBS += -lpthread -static-libstdc++ -static-libgcc
  USE_AESNI := no
else
  LDLIBS = -lcryptopp -lboost_system -lboost_date_time -lboost_filesystem -lboost_regex -lboost_program_options -lpthread
endif

GREP = fgrep
IS_64 := $(shell $(CXX) -dumpmachine 2>&1 | $(GREP) -c "64")
ifeq ($(USE_AESNI),yes)
ifeq ($(IS_64),1)
#check if AES-NI is supported by CPU
ifneq ($(shell $(GREP) -c aes /proc/cpuinfo),0)
  CXXFLAGS += -maes -DAESNI
else
  $(warning "AESNI support enabled requested but not supported by this CPU")
endif
endif
endif
